; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\system_nrf51.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\system_nrf51.d --cpu=Cortex-M0 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\..\ -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Device\Nordic\nRF51422\Include -D__MICROLIB -D__UVISION_VERSION=514 -DNRF51 -DBSP_DEFINES_ONLY -DBOARD_PCA10028 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\system_nrf51.crf ..\..\..\..\..\..\components\toolchain\system_nrf51.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;55     
;;;56     void SystemCoreClockUpdate(void)
000000  4902              LDR      r1,|L1.12|
;;;57     {
;;;58         SystemCoreClock = __SYSTEM_CLOCK;
000002  4801              LDR      r0,|L1.8|
000004  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;59     }
000006  4770              BX       lr
;;;60     
                          ENDP

                  |L1.8|
                          DCD      0x00f42400
                  |L1.12|
                          DCD      ||.data||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;60     
;;;61     void SystemInit(void)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63         /* If desired, switch off the unused RAM to lower consumption by the use of RAMON register.
;;;64            It can also be done in the application main() function. */
;;;65     
;;;66         /* Prepare the peripherals for use as indicated by the PAN 26 "System: Manual setup is required
;;;67            to enable the use of peripherals" found at Product Anomaly document for your device found at
;;;68            https://www.nordicsemi.com/. The side effect of executing these instructions in the devices 
;;;69            that do not need it is that the new peripherals in the second generation devices (LPCOMP for
;;;70            example) will not be available. */
;;;71         if (is_manual_peripheral_setup_needed())
000002  f7fffffe          BL       is_manual_peripheral_setup_needed
000006  2800              CMP      r0,#0
000008  d005              BEQ      |L2.22|
;;;72         {
;;;73             *(uint32_t volatile *)0x40000504 = 0xC007FFDF;
00000a  490e              LDR      r1,|L2.68|
00000c  480c              LDR      r0,|L2.64|
00000e  6048              STR      r0,[r1,#4]
;;;74             *(uint32_t volatile *)0x40006C18 = 0x00008000;
000010  13c8              ASRS     r0,r1,#15
000012  490d              LDR      r1,|L2.72|
000014  6188              STR      r0,[r1,#0x18]
                  |L2.22|
000016  480d              LDR      r0,|L2.76|
000018  8c01              LDRH     r1,[r0,#0x20]
00001a  b2c9              UXTB     r1,r1
00001c  2901              CMP      r1,#1
00001e  d10e              BNE      |L2.62|
000020  8c81              LDRH     r1,[r0,#0x24]
000022  0709              LSLS     r1,r1,#28
000024  d10b              BNE      |L2.62|
000026  8d01              LDRH     r1,[r0,#0x28]
000028  0609              LSLS     r1,r1,#24
00002a  0f09              LSRS     r1,r1,#28
00002c  2904              CMP      r1,#4
00002e  d106              BNE      |L2.62|
000030  8d80              LDRH     r0,[r0,#0x2c]
000032  0600              LSLS     r0,r0,#24
000034  0f00              LSRS     r0,r0,#28
000036  d102              BNE      |L2.62|
;;;75         }
;;;76         
;;;77         /* Disable PROTENSET registers under debug, as indicated by PAN 59 "MPU: Reset value of DISABLEINDEBUG
;;;78            register is incorrect" found at Product Anomaly document four your device found at 
;;;79            https://www.nordicsemi.com/. There is no side effect of using these instruction if not needed. */
;;;80         if (is_disabled_in_debug_needed())
;;;81         {
;;;82             NRF_MPU->DISABLEINDEBUG = MPU_DISABLEINDEBUG_DISABLEINDEBUG_Disabled << MPU_DISABLEINDEBUG_DISABLEINDEBUG_Pos;
000038  4905              LDR      r1,|L2.80|
00003a  2001              MOVS     r0,#1
00003c  6088              STR      r0,[r1,#8]
                  |L2.62|
;;;83         }
;;;84     }
00003e  bd10              POP      {r4,pc}
;;;85     
                          ENDP

                  |L2.64|
                          DCD      0xc007ffdf
                  |L2.68|
                          DCD      0x40000500
                  |L2.72|
                          DCD      0x40006c00
                  |L2.76|
                          DCD      0xf0000fc0
                  |L2.80|
                          DCD      0x40000600

                          AREA ||i.is_manual_peripheral_setup_needed||, CODE, READONLY, ALIGN=2

                  is_manual_peripheral_setup_needed PROC
;;;86     
;;;87     static bool is_manual_peripheral_setup_needed(void) 
000000  4810              LDR      r0,|L3.68|
;;;88     {
;;;89         if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x1) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0))
000002  8c01              LDRH     r1,[r0,#0x20]
000004  b2c9              UXTB     r1,r1
000006  2901              CMP      r1,#1
000008  d117              BNE      |L3.58|
00000a  8c81              LDRH     r1,[r0,#0x24]
00000c  0709              LSLS     r1,r1,#28
00000e  d114              BNE      |L3.58|
;;;90         {
;;;91             if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x00) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
000010  8d01              LDRH     r1,[r0,#0x28]
000012  0609              LSLS     r1,r1,#24
000014  0f0a              LSRS     r2,r1,#28
000016  d103              BNE      |L3.32|
000018  8d82              LDRH     r2,[r0,#0x2c]
00001a  0612              LSLS     r2,r2,#24
00001c  0f12              LSRS     r2,r2,#28
00001e  d00e              BEQ      |L3.62|
                  |L3.32|
;;;92             {
;;;93                 return true;
;;;94             }
;;;95             if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x10) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
000020  0f09              LSRS     r1,r1,#28
000022  2901              CMP      r1,#1
000024  d103              BNE      |L3.46|
000026  8d82              LDRH     r2,[r0,#0x2c]
000028  0612              LSLS     r2,r2,#24
00002a  0f12              LSRS     r2,r2,#28
00002c  d007              BEQ      |L3.62|
                  |L3.46|
;;;96             {
;;;97                 return true;
;;;98             }
;;;99             if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
00002e  2903              CMP      r1,#3
000030  d103              BNE      |L3.58|
000032  8d80              LDRH     r0,[r0,#0x2c]
000034  0600              LSLS     r0,r0,#24
000036  0f00              LSRS     r0,r0,#28
000038  d001              BEQ      |L3.62|
                  |L3.58|
;;;100            {
;;;101                return true;
;;;102            }
;;;103        }
;;;104        
;;;105        return false;
00003a  2000              MOVS     r0,#0
;;;106    }
00003c  4770              BX       lr
                  |L3.62|
00003e  2001              MOVS     r0,#1                 ;101
000040  4770              BX       lr
;;;107    
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0xf0000fc0

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                  ||__tagsym$$used||
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\toolchain\\system_nrf51.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_system_nrf51_c_5d646a67____REV16|
#line 129 "..\\..\\..\\..\\..\\..\\components\\toolchain\\gcc\\core_cmInstr.h"
|__asm___14_system_nrf51_c_5d646a67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_system_nrf51_c_5d646a67____REVSH|
#line 144
|__asm___14_system_nrf51_c_5d646a67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
