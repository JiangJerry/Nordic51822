; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\main.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\main.d --cpu=Cortex-M0 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\..\ -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Device\Nordic\nRF51422\Include -D__MICROLIB -D__UVISION_VERSION=514 -DNRF51 -DBSP_DEFINES_ONLY -DBOARD_PCA10028 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\main.crf ..\..\..\main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;32      */
;;;33     int main(void)
000000  b086              SUB      sp,sp,#0x18
;;;34     {
;;;35     	neopixel_strip_t m_strip;
;;;36     	uint8_t dig_pin_num = 7;
;;;37     	uint8_t leds_per_strip = 12;
;;;38     	uint8_t error;
;;;39     	uint8_t led_to_enable = 10;
;;;40     	uint8_t red = 125;
000002  207d              MOVS     r0,#0x7d
;;;41     	uint8_t green = 0;
000004  9002              STR      r0,[sp,#8]
000006  2000              MOVS     r0,#0
;;;42     	uint8_t blue = 123;
;;;43     
;;;44     	neopixel_init(&m_strip, dig_pin_num, leds_per_strip);
000008  9001              STR      r0,[sp,#4]
00000a  2107              MOVS     r1,#7                 ;36
00000c  220c              MOVS     r2,#0xc               ;37
00000e  240a              MOVS     r4,#0xa               ;39
000010  257b              MOVS     r5,#0x7b              ;42
000012  a803              ADD      r0,sp,#0xc
000014  f7fffffe          BL       neopixel_init
;;;45     	neopixel_clear(&m_strip);
000018  a803              ADD      r0,sp,#0xc
00001a  f7fffffe          BL       neopixel_clear
;;;46     //	//clear and remove strip
;;;47     //	neopixel_clear(&m_strip);
;;;48     //	neopixel_destroy(&m_strip);	
;;;49     	
;;;50         // Configure LED-pins as outputs.
;;;51         LEDS_CONFIGURE(LEDS_MASK);
00001e  2000              MOVS     r0,#0
000020  4e15              LDR      r6,|L1.120|
000022  2203              MOVS     r2,#3
000024  4b15              LDR      r3,|L1.124|
000026  2101              MOVS     r1,#1
                  |L1.40|
000028  460f              MOV      r7,r1
00002a  4087              LSLS     r7,r7,r0
00002c  4237              TST      r7,r6
00002e  d002              BEQ      |L1.54|
000030  0087              LSLS     r7,r0,#2
000032  18ff              ADDS     r7,r7,r3
000034  603a              STR      r2,[r7,#0]
                  |L1.54|
000036  1c40              ADDS     r0,r0,#1
000038  2820              CMP      r0,#0x20
00003a  d3f5              BCC      |L1.40|
00003c  480f              LDR      r0,|L1.124|
00003e  3018              ADDS     r0,r0,#0x18
000040  6002              STR      r2,[r0,#0]
000042  490e              LDR      r1,|L1.124|
000044  200c              MOVS     r0,#0xc
000046  3114              ADDS     r1,r1,#0x14
000048  6008              STR      r0,[r1,#0]
00004a  4e0d              LDR      r6,|L1.128|
00004c  2740              MOVS     r7,#0x40
                  |L1.78|
00004e  1c64              ADDS     r4,r4,#1
;;;52     	nrf_gpio_cfg_output(LED_0);
;;;53     	nrf_gpio_cfg_input(BUTTON_1,NRF_GPIO_PIN_PULLUP);
;;;54         // Toggle LEDs.
;;;55     //		nrf_delay_ms(500);
;;;56         while (true)
;;;57         {
;;;58     		led_to_enable++;
000050  b2e0              UXTB     r0,r4
;;;59     		led_to_enable = led_to_enable%12;
000052  210c              MOVS     r1,#0xc
000054  f7fffffe          BL       __aeabi_uidivmod
000058  460c              MOV      r4,r1
;;;60     		error = neopixel_set_color_and_show(&m_strip, led_to_enable, red, green, blue);
00005a  9500              STR      r5,[sp,#0]
00005c  a803              ADD      r0,sp,#0xc
00005e  9b01              LDR      r3,[sp,#4]
000060  9a02              LDR      r2,[sp,#8]
000062  f7fffffe          BL       neopixel_set_color_and_show
000066  6930              LDR      r0,[r6,#0x10]
000068  0940              LSRS     r0,r0,#5
00006a  07c0              LSLS     r0,r0,#31
00006c  0fc0              LSRS     r0,r0,#31
;;;61     		if (error) {
;;;62     		//led_to_enable was not within number leds_per_strip
;;;63     		}
;;;64     		if(nrf_gpio_pin_read(BUTTON_1))
00006e  d001              BEQ      |L1.116|
000070  60b7              STR      r7,[r6,#8]
;;;65     		{
;;;66     			nrf_gpio_pin_set(LED_0);
000072  e7ec              B        |L1.78|
                  |L1.116|
000074  60f7              STR      r7,[r6,#0xc]
;;;67     		}
;;;68     		else
;;;69     		{
;;;70     			nrf_gpio_pin_clear(LED_0);
000076  e7ea              B        |L1.78|
;;;71     		}
;;;72         }
;;;73     }
;;;74     
                          ENDP

                  |L1.120|
                          DCD      0x01c00040
                  |L1.124|
                          DCD      0x50000700
                  |L1.128|
                          DCD      0x50000500

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  leds_list
000000  06161718          DCB      0x06,0x16,0x17,0x18

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e9d5a046____REV16|
#line 129 "..\\..\\..\\..\\..\\..\\components\\toolchain\\gcc\\core_cmInstr.h"
|__asm___6_main_c_e9d5a046____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e9d5a046____REVSH|
#line 144
|__asm___6_main_c_e9d5a046____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e9d5a046__nrf_delay_us|
#line 8 "..\\..\\..\\..\\..\\..\\components\\drivers_nrf\\hal\\nrf_delay.h"
|__asm___6_main_c_e9d5a046__nrf_delay_us| PROC
#line 9

loop
 SUBS R0, R0, #1
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 BNE loop
 BX LR
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
